{"ast":null,"code":"var _jsxFileName = \"/home/renuka/Desktop/01-starting-setup/src/Components/Expense/ExpensesChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  for (const expenses of props.expenses) {\n    const expenseMonth = expenses.date.getMonth(); //starting at 0 => January is 0\n    chartDataPoints[expenseMonth].value += expenses.amount;\n  }\n  console.log('tellllllll meeeee' + chartDataPoints.value);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","label","value","expenses","expenseMonth","date","getMonth","amount","console","log","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/renuka/Desktop/01-starting-setup/src/Components/Expense/ExpensesChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n\n    { label: \"Feb\", value: 0 },\n\n    { label: \"Mar\", value: 0 },\n\n    { label: \"Apr\", value: 0 },\n\n    { label: \"May\", value: 0 },\n\n    { label: \"Jun\", value: 0 },\n\n    { label: \"Jul\", value: 0 },\n\n    { label: \"Aug\", value: 0 },\n\n    { label: \"Sep\", value: 0 },\n\n    { label: \"Oct\", value: 0 },\n\n    { label: \"Nov\", value: 0 },\n\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expenses of props.expenses) {\n    const expenseMonth = expenses.date.getMonth(); //starting at 0 => January is 0\n    chartDataPoints[expenseMonth].value += expenses.amount;\n    \n  }\n  console.log('tellllllll meeeee'+chartDataPoints.value);\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAE1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC3B;EAED,KAAK,MAAMC,QAAQ,IAAIJ,KAAK,CAACI,QAAQ,EAAE;IACrC,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/CN,eAAe,CAACI,YAAY,CAAC,CAACF,KAAK,IAAIC,QAAQ,CAACI,MAAM;EAExD;EACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAACT,eAAe,CAACE,KAAK,CAAC;EACtD,oBAAOL,OAAA,CAACF,KAAK;IAACe,UAAU,EAAEV;EAAgB;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACC,EAAA,GAlCIjB,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}